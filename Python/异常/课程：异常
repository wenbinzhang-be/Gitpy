目标：了解异常，捕获异常， 异常的else，异常的finally，异常的传递，自定义异常
一、了解异常
检测到一个错误时，解释器就无法继续执行了，反而出现了一些错误的提示，这就是所谓的“异常”。
例如：以r方式打开一个不存在的文件。
1 open（‘test.txt’,'r'）
把有可能出错的语句放入到异常语句中去，以做到不影响程序继续执行。
1.异常的语法
try：
    可能发生异常的代码
exce：
    如果出现异常的代码
else：
    没有异常的代码
finally：
    不管有没有异常都要执行的代码
2.捕获异常
except 异常类型：
    代码
except 异常类型 as xx：
    代码
3.自定义异常
class 异常类类名（Exception）
    代码
    # 设置抛出异常的描述信息
    def __str__(self):
        return...
raise 异常类名()

#捕获异常
exception Exception as xx
    print(xx)
