字符串是编程时涉及到的最多的一种数据结构，对字符串进行操作的需求几乎无处不在。
比如判断一个字符串是否是合法的Email地址，虽然可以编程提取@前后的字串，在分别判断是否是单词和域名，
但这样做不仅麻烦，而且代码难以复用。
正则表达式是一种用来匹配字符串的强有力的武器，它的设计思路是用一种描述性的语言
来给字符串定义一个规则，凡是符合规则的字符串，我们就认为它“匹配”了，否则，
该字符串就是不合法的。
元字符的概念：
.   匹配换行符以外的任意字符
\w  匹配字母或数字或下划线或汉字  \W  匹配任意不是字母，数字，下划线，汉字的字符
\s  匹配任意字符串             \S  匹配任意不是空白符的字符
\d  匹配数字                    \D  匹配任意非数字的字符
\b  匹配单词的开始或结束          \B  匹配不是单词开头或结束的位置
^   匹配单词的开始                 [^x]    匹配处理x以外的任意字符
$   匹配字符串的结束                [^aeiou]    匹配除了aeiou这几个字母以外的任意字符

正则表达式中的注释
1.  2[0-4]\d(?#200-249)|25[0-5](?#250-255)|[01]?\d\d?(?#0-199)
